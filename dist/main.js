!function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);var r=function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,u)}c((r=r.apply(e,n||[])).next())}))},o=function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},a=function(e){return r(void 0,void 0,void 0,(function(){var n,t;return o(this,(function(r){switch(r.label){case 0:return n=e.lat,t=e.lng,[4,fetch("https://www.vegguide.org/search/by-lat-long/"+n+","+t)];case 1:return[4,r.sent().json()];case 2:return[2,r.sent()]}}))}))},i=function(e,n,t,r){return new(t||(t=Promise))((function(o,a){function i(e){try{c(r.next(e))}catch(e){a(e)}}function u(e){try{c(r.throw(e))}catch(e){a(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(i,u)}c((r=r.apply(e,n||[])).next())}))},u=function(e,n){var t,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=n.call(e,i)}catch(e){a=[6,e],r=0}finally{t=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},c={name:"London",lat:51.5033,lng:-.1195},l={name:"Paris",lat:48.8566,lng:2.3522},s={name:"Seoul",lat:37.5665,lng:126.978},f=function(e,n){document.getElementById("restaurants").innerHTML="<h2>Showing restaurants in: "+n.name+"</h2><p>1: "+e[0].name+": "+e[0].short_description+" </p><p>2: "+e[1].name+": "+e[1].short_description+"</p><p>3: "+e[2].name+": "+e[2].short_description+"</p><p>4. "+e[3].name+": "+e[3].short_description+"</p><p>5. "+e[4].name+": "+e[4].short_description+"</p>"};a(c).then((function(e){console.log(e);var n=e.entries.splice(0,5);console.log(n),f(n,c)}));var p=function(e){var n;a(e).then((function(t){var r;console.log(t),n=t.entries.splice(0,5),console.log(n),f(n,e),(r=n[0],i(void 0,void 0,void 0,(function(){var e;return u(this,(function(n){switch(n.label){case 0:return e=r.address1+"+"+r.address2+"+"+r.country,[4,fetch("https://maps.googleapis.com/maps/api/geocode/json?address="+e+"&key=AIzaSyCVF0MR-UK7X5IRbYzxSLM6B921NbZoFnM")];case 1:return[4,n.sent().json()];case 2:return[2,n.sent()]}}))}))).then((function(e){console.log(e.results[0].geometry.location)}))})),function(e,n){var t=new google.maps.Map(document.getElementById("map"),{zoom:11,center:e});new google.maps.Marker({position:e,map:t}),new google.maps.Marker({position:e,map:t}),new google.maps.Marker({position:e,map:t}),new google.maps.Marker({position:e,map:t}),new google.maps.Marker({position:e,map:t})}(e)};p(c),document.getElementById("paris-button").addEventListener("click",(function(){return p(l)})),document.getElementById("london-button").addEventListener("click",(function(){return p(c)})),document.getElementById("seoul-button").addEventListener("click",(function(){return p(s)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,